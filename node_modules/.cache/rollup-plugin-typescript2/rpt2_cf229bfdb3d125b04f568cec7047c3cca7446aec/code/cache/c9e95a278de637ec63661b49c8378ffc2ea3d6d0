{"code":"import { NCache } from \"./cache\";\r\nimport { GlobalCache } from \"./globalcache\";\r\n/**\r\n * 指令管理器\r\n * $directives  指令集\r\n * $expressions 表达式集\r\n * $events      事件集\r\n * $savedoms    dom相关缓存 包括 html dom 和 参数\r\n * $doms        渲染树\r\n */\r\nexport class ObjectManager {\r\n    /**\r\n     * module   模块\r\n     * @param module\r\n     */\r\n    constructor(module) {\r\n        this.module = module;\r\n        this.cache = new NCache();\r\n    }\r\n    /**\r\n     * 保存到cache\r\n     * @param key       键，支持\".\"\r\n     * @param value     值\r\n     */\r\n    set(key, value) {\r\n        this.cache.set(key, value);\r\n    }\r\n    /**\r\n     * 从cache读取\r\n     * @param key   键，支持\".\"\r\n     * @returns     缓存的值或undefined\r\n     */\r\n    get(key) {\r\n        return this.cache.get(key);\r\n    }\r\n    /**\r\n     * 从cache移除\r\n     * @param key   键，支持\".\"\r\n     */\r\n    remove(key) {\r\n        this.cache.remove(key);\r\n    }\r\n    /**\r\n     * 获取指令实例\r\n     * @param module    模块\r\n     * @param id        指令id\r\n     * @returns         指令对象\r\n     */\r\n    getDirective(id) {\r\n        let d = this.cache.get('$directives.' + id + '.$instance');\r\n        if (!d) {\r\n            d = GlobalCache.get('$directives.' + id);\r\n            GlobalCache.removeDirective(id);\r\n            if (d) {\r\n                this.cache.set('$directives.' + id, d);\r\n                return d.$instance;\r\n            }\r\n        }\r\n        return d;\r\n    }\r\n    /**\r\n     * 保存指令实例\r\n     * @param module        模块\r\n     * @param directive     指令对象\r\n     */\r\n    saveDirective(directive) {\r\n        this.cache.set('$directives.' + directive.id + '.$instance', directive);\r\n    }\r\n    /**\r\n     * 移除指令\r\n     * @param id    指令id\r\n     */\r\n    removeDirective(id) {\r\n        this.cache.remove('$directives.' + id);\r\n    }\r\n    /**\r\n     * 设置指令参数\r\n     * @param id        指令id\r\n     * @param key       dom key\r\n     * @param name      参数名\r\n     * @param value     参数值\r\n     */\r\n    setDirectiveParam(id, key, name, value) {\r\n        this.cache.set('$doms.' + key + '$directives.' + id + '.$params.' + name, value);\r\n    }\r\n    /**\r\n     * 获取指令参数值\r\n     * @param id        指令id\r\n     * @param key       dom key\r\n     * @param name      参数名\r\n     * @returns         参数值\r\n     */\r\n    getDirectiveParam(id, key, name) {\r\n        return this.cache.get('$doms.' + key + '$directives.' + id + '.$params.' + name);\r\n    }\r\n    /**\r\n     * 移除指令参数\r\n     * @param id        指令id\r\n     * @param key       dom key\r\n     * @param name      参数名\r\n     */\r\n    removeDirectiveParam(id, key, name) {\r\n        this.cache.remove('$doms.' + key + '$directives.' + id + '.$params.' + name);\r\n    }\r\n    /**\r\n     * 清空指令参数\r\n     * @param id        指令id\r\n     * @param key       dom key\r\n     */\r\n    clearDirectiveParam(id, key) {\r\n        this.cache.remove('$doms.' + key + '$directives.' + id + '.$params.' + name);\r\n    }\r\n    /**\r\n     * 获取表达式实例\r\n     * @param id        表达式id\r\n     * @returns         表达式对象\r\n     */\r\n    getExpression(id) {\r\n        let ex = this.cache.get('$expressions.' + id);\r\n        if (!ex) {\r\n            ex = GlobalCache.get('$expressions.' + id);\r\n            GlobalCache.removeExpression(id);\r\n            if (ex) {\r\n                this.cache.set('$expressions.' + id, ex);\r\n                return ex;\r\n            }\r\n        }\r\n        return ex;\r\n    }\r\n    /**\r\n     * 保存表达式实例\r\n     * @param expression    表达式对象\r\n     */\r\n    saveExpression(expression) {\r\n        this.cache.set('$expressions.' + expression.id, expression);\r\n    }\r\n    /**\r\n     * 移除表达式\r\n     * @param id    表达式id\r\n     */\r\n    removeExpression(id) {\r\n        this.cache.remove('$expressions.' + id);\r\n    }\r\n    /**\r\n     * 获取事件实例\r\n     * @param id        表达式id\r\n     * @returns         事件对象\r\n     */\r\n    getEvent(id) {\r\n        let ev = this.cache.get('$events.' + id + '.$instance');\r\n        if (!ev) {\r\n            ev = GlobalCache.get('$events.' + id);\r\n            GlobalCache.removeEvent(id);\r\n            if (ev) {\r\n                this.cache.set('$events.' + id, ev);\r\n                return ev.$instance;\r\n            }\r\n        }\r\n        return ev;\r\n    }\r\n    /**\r\n     * 保存事件实例\r\n     * @param event     事件对象\r\n     */\r\n    saveEvent(event) {\r\n        this.cache.set('$events.' + event.id + '.$instance', event);\r\n    }\r\n    /**\r\n     * 移除事件\r\n     * @param id    事件id\r\n     */\r\n    removeEvent(id) {\r\n        this.cache.remove('$events.' + id);\r\n    }\r\n    /**\r\n     * 设置事件参数\r\n     * @param id        事件id\r\n     * @param key       dom key\r\n     * @param name      参数名\r\n     * @param value     参数值\r\n     */\r\n    setEventParam(id, key, name, value) {\r\n        this.cache.set('$doms.' + key + '$events.' + id + '.$params.' + name, value);\r\n    }\r\n    /**\r\n     * 获取事件参数值\r\n     * @param id        事件id\r\n     * @param key       dom key\r\n     * @param name      参数名\r\n     * @returns         参数值\r\n     */\r\n    getEventParam(id, key, name) {\r\n        return this.cache.get('$doms.' + key + '$events.' + id + '.$params.' + name);\r\n    }\r\n    /**\r\n     * 移除事件参数\r\n     * @param id        事件id\r\n     * @param key       dom key\r\n     * @param name      参数名\r\n     */\r\n    removeEventParam(id, key, name) {\r\n        this.cache.remove('$doms.' + key + '$events.' + id + '.$params.' + name);\r\n    }\r\n    /**\r\n     * 清空事件参数\r\n     * @param id        事件id\r\n     * @param key       dom key\r\n     */\r\n    clearEventParam(id, key) {\r\n        this.cache.remove('$doms.' + key + '$events.' + id + '.$params');\r\n    }\r\n    /**\r\n     * 获取旧虚拟dom\r\n     * @param dom       dom对象\r\n     */\r\n    saveElement(dom) {\r\n        this.cache.set('$doms.' + dom.key, dom);\r\n    }\r\n    /**\r\n     * 获取渲染树虚拟dom\r\n     * @param key       dom key\r\n     * @returns         dom对象\r\n     */\r\n    getElement(key) {\r\n        return this.cache.get('$doms.' + key);\r\n    }\r\n    /**\r\n     * 删除渲染树虚拟dom\r\n     * @param key       虚拟dom key\r\n     */\r\n    removeElement(key) {\r\n        this.cache.remove('$doms.' + key);\r\n    }\r\n    /**\r\n     * 移除保存的节点（包括参数和html dom）\r\n     * @param key   dom key\r\n     */\r\n    removeSavedNode(key) {\r\n        this.cache.remove('$doms.' + key);\r\n    }\r\n    /**\r\n     * 设置dom参数值\r\n     * @param key       dom key\r\n     * @param name       参数名\r\n     * @param value     参数值\r\n     */\r\n    setElementParam(key, name, value) {\r\n        this.cache.set('$doms.' + key + '.$params.' + name, value);\r\n    }\r\n    /**\r\n     * 获取dom参数值\r\n     * @param key       dom key\r\n     * @param name      参数名\r\n     * @returns         参数值\r\n     */\r\n    getElementParam(key, name) {\r\n        return this.cache.get('$doms.' + key + '.$params.' + name);\r\n    }\r\n    /**\r\n     * 移除dom参数\r\n     * @param key       dom key\r\n     * @param name      参数名\r\n     */\r\n    removeElementParam(key, name) {\r\n        this.cache.remove('$doms.' + key + '.$params.' + name);\r\n    }\r\n    /**\r\n     * 清除element 参数集\r\n     * @param key   dom key\r\n     */\r\n    clearElementParams(key) {\r\n        this.cache.remove('$doms.' + key + '.$params');\r\n    }\r\n    /**\r\n     * 清除指令集\r\n     */\r\n    clearDirectives() {\r\n        this.remove('$directives');\r\n    }\r\n    /**\r\n     * 清除表达式集\r\n     */\r\n    clearExpressions() {\r\n        this.remove('$directives');\r\n    }\r\n    /**\r\n     * 清除事件集\r\n     */\r\n    clearEvents() {\r\n        this.remove('$directives');\r\n    }\r\n    /**\r\n     * 清除缓存dom对象\r\n     */\r\n    clearSaveDoms() {\r\n        this.remove('$doms');\r\n    }\r\n}\r\n//# sourceMappingURL=objectmanager.js.map","references":["D:/User_zhao/gitRepository/competition/nodom/core/cache.ts","D:/User_zhao/gitRepository/competition/nodom/core/directive.ts","D:/User_zhao/gitRepository/competition/nodom/core/virtualdom.ts","D:/User_zhao/gitRepository/competition/nodom/core/event.ts","D:/User_zhao/gitRepository/competition/nodom/core/expression.ts","D:/User_zhao/gitRepository/competition/nodom/core/globalcache.ts","D:/User_zhao/gitRepository/competition/nodom/core/module.ts","D:/User_zhao/gitRepository/competition/nodom/core/util.ts"],"map":"{\"version\":3,\"file\":\"objectmanager.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../core/objectmanager.ts\"],\"names\":[],\"mappings\":\"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\"}"}
