{"code":"import { NError } from \"./error\";\r\nimport { NodomMessage } from \"./nodom\";\r\n/**\r\n * 基础服务库\r\n * @since       1.0.0\r\n */\r\nexport class Util {\r\n    //唯一主键\r\n    static genId() {\r\n        return this.generatedId++;\r\n    }\r\n    /**\r\n     * 初始化保留词map\r\n     */\r\n    static initKeyMap() {\r\n        this.keyWordMap.set('arguments', true);\r\n        this.keyWordMap.set('boolean', true);\r\n        this.keyWordMap.set('break', true);\r\n        this.keyWordMap.set('byte', true);\r\n        this.keyWordMap.set('catch', true);\r\n        this.keyWordMap.set('char', true);\r\n        this.keyWordMap.set('const', true);\r\n        this.keyWordMap.set('default', true);\r\n        this.keyWordMap.set('delete', true);\r\n        this.keyWordMap.set('do', true);\r\n        this.keyWordMap.set('double', true);\r\n        this.keyWordMap.set('else', true);\r\n        this.keyWordMap.set('enum', true);\r\n        this.keyWordMap.set('eval', true);\r\n        this.keyWordMap.set('false', true);\r\n        this.keyWordMap.set('float', true);\r\n        this.keyWordMap.set('for', true);\r\n        this.keyWordMap.set('function', true);\r\n        this.keyWordMap.set('goto', true);\r\n        this.keyWordMap.set('if', true);\r\n        this.keyWordMap.set('in', true);\r\n        this.keyWordMap.set('instanceof', true);\r\n        this.keyWordMap.set('int', true);\r\n        this.keyWordMap.set('let', true);\r\n        this.keyWordMap.set('long', true);\r\n        this.keyWordMap.set('new', true);\r\n        this.keyWordMap.set('null', true);\r\n        this.keyWordMap.set('return', true);\r\n        this.keyWordMap.set('short', true);\r\n        this.keyWordMap.set('switch', true);\r\n        this.keyWordMap.set('this', true);\r\n        this.keyWordMap.set('throw', true);\r\n        this.keyWordMap.set('true', true);\r\n        this.keyWordMap.set('try', true);\r\n        this.keyWordMap.set('this', true);\r\n        this.keyWordMap.set('throw', true);\r\n        this.keyWordMap.set('typeof', true);\r\n        this.keyWordMap.set('var', true);\r\n        this.keyWordMap.set('while', true);\r\n        this.keyWordMap.set('with', true);\r\n        this.keyWordMap.set('Array', true);\r\n        this.keyWordMap.set('Date', true);\r\n        this.keyWordMap.set('Set', true);\r\n        this.keyWordMap.set('Map', true);\r\n        this.keyWordMap.set('eval', true);\r\n        this.keyWordMap.set('function', true);\r\n        this.keyWordMap.set('Infinity', true);\r\n        this.keyWordMap.set('isFinite', true);\r\n        this.keyWordMap.set('isNaN', true);\r\n        this.keyWordMap.set('isPrototypeOf', true);\r\n        this.keyWordMap.set('Math', true);\r\n        this.keyWordMap.set('NaN', true);\r\n        this.keyWordMap.set('Number', true);\r\n        this.keyWordMap.set('Object', true);\r\n        this.keyWordMap.set('prototype', true);\r\n        this.keyWordMap.set('String', true);\r\n        this.keyWordMap.set('isPrototypeOf', true);\r\n        this.keyWordMap.set('undefined', true);\r\n        this.keyWordMap.set('valueOf', true);\r\n    }\r\n    /**\r\n     * 是否为 js 保留关键字\r\n     * @param name  名字\r\n     * @returns     如果为保留字，则返回true，否则返回false\r\n     */\r\n    static isKeyWord(name) {\r\n        return this.keyWordMap.has(name);\r\n    }\r\n    /******对象相关******/\r\n    /**\r\n     * 对象复制\r\n     * @param srcObj    源对象\r\n     * @param expKey    不复制的键正则表达式或名\r\n     * @param extra     clone附加参数\r\n     * @returns         复制的对象\r\n     */\r\n    static clone(srcObj, expKey, extra) {\r\n        let me = this;\r\n        let map = new WeakMap();\r\n        return clone(srcObj, expKey, extra);\r\n        /**\r\n         * clone对象\r\n         * @param src   待clone对象\r\n         * @param extra clone附加参数\r\n         * @returns     克隆后的对象\r\n         */\r\n        function clone(src, expKey, extra) {\r\n            //非对象或函数，直接返回            \r\n            if (!src || typeof src !== 'object' || Util.isFunction(src)) {\r\n                return src;\r\n            }\r\n            let dst;\r\n            //带有clone方法，则直接返回clone值\r\n            if (src.clone && Util.isFunction(src.clone)) {\r\n                return src.clone(extra);\r\n            }\r\n            else if (me.isObject(src)) {\r\n                dst = new Object();\r\n                //把对象加入map，如果后面有新克隆对象，则用新克隆对象进行覆盖\r\n                map.set(src, dst);\r\n                Object.getOwnPropertyNames(src).forEach((prop) => {\r\n                    //不克隆的键\r\n                    if (expKey) {\r\n                        if (expKey.constructor === RegExp && expKey.test(prop) //正则表达式匹配的键不复制\r\n                            || Util.isArray(expKey) && expKey.includes(prop) //被排除的键不复制\r\n                        ) {\r\n                            return;\r\n                        }\r\n                    }\r\n                    dst[prop] = getCloneObj(src[prop], expKey, extra);\r\n                });\r\n            }\r\n            else if (me.isMap(src)) {\r\n                dst = new Map();\r\n                //把对象加入map，如果后面有新克隆对象，则用新克隆对象进行覆盖\r\n                src.forEach((value, key) => {\r\n                    //不克隆的键\r\n                    if (expKey) {\r\n                        if (expKey.constructor === RegExp && expKey.test(key) //正则表达式匹配的键不复制\r\n                            || expKey.includes(key)) { //被排除的键不复制\r\n                            return;\r\n                        }\r\n                    }\r\n                    dst.set(key, getCloneObj(value, expKey, extra));\r\n                });\r\n            }\r\n            else if (me.isArray(src)) {\r\n                dst = new Array();\r\n                //把对象加入map，如果后面有新克隆对象，则用新克隆对象进行覆盖\r\n                src.forEach(function (item, i) {\r\n                    dst[i] = getCloneObj(item, expKey, extra);\r\n                });\r\n            }\r\n            return dst;\r\n        }\r\n        /**\r\n         * 获取clone对象\r\n         * @param value     待clone值\r\n         * @param expKey    排除键\r\n         * @param extra     附加参数\r\n         */\r\n        function getCloneObj(value, expKey, extra) {\r\n            if (typeof value === 'object' && !Util.isFunction(value)) {\r\n                let co = null;\r\n                if (!map.has(value)) { //clone新对象\r\n                    co = clone(value, expKey, extra);\r\n                }\r\n                else { //从map中获取对象\r\n                    co = map.get(value);\r\n                }\r\n                return co;\r\n            }\r\n            return value;\r\n        }\r\n    }\r\n    /**\r\n     * 合并多个对象并返回\r\n     * @param   参数数组\r\n     * @returns 返回对象\r\n     */\r\n    static merge(o1, o2, o3, o4, o5, o6) {\r\n        let me = this;\r\n        for (let i = 0; i < arguments.length; i++) {\r\n            if (!this.isObject(arguments[i])) {\r\n                throw new NError('invoke', 'Util.merge', i + '', 'object');\r\n            }\r\n        }\r\n        let retObj = Object.assign.apply(null, arguments);\r\n        subObj(retObj);\r\n        return retObj;\r\n        //处理子对象\r\n        function subObj(obj) {\r\n            for (let o in obj) {\r\n                if (me.isObject(obj[o]) || me.isArray(obj[o])) { //对象或数组\r\n                    retObj[o] = me.clone(retObj[o]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 把obj2对象所有属性赋值给obj1\r\n     */\r\n    static assign(obj1, obj2) {\r\n        if (Object.assign) {\r\n            Object.assign(obj1, obj2);\r\n        }\r\n        else {\r\n            this.getOwnProps(obj2).forEach(function (p) {\r\n                obj1[p] = obj2[p];\r\n            });\r\n        }\r\n        return obj1;\r\n    }\r\n    /**\r\n     * 比较两个对象值是否相同(只比较object和array)\r\n     * @param src   源对象\r\n     * @param dst   目标对象\r\n     * @returns     值相同则返回true，否则返回false\r\n     */\r\n    static compare(src, dst, deep) {\r\n        if (!src && !dst) {\r\n            return true;\r\n        }\r\n        if (typeof src !== 'object' || typeof dst !== 'object') {\r\n            return false;\r\n        }\r\n        const keys = Object.getOwnPropertyNames(src);\r\n        if (keys.length !== Object.getOwnPropertyNames(dst).length) {\r\n            return false;\r\n        }\r\n        for (let k of keys) {\r\n            if (src[k] !== dst[k]) {\r\n                return false;\r\n            }\r\n        }\r\n        //深度比较\r\n        if (deep) {\r\n            for (let k of keys) {\r\n                let r = this.compare(src[k], dst[k]);\r\n                if (!r) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * 获取对象自有属性\r\n     */\r\n    static getOwnProps(obj) {\r\n        if (!obj) {\r\n            return [];\r\n        }\r\n        return Object.getOwnPropertyNames(obj);\r\n    }\r\n    /**************对象判断相关************/\r\n    /**\r\n     * 是否为函数\r\n     * @param foo   检查的对象\r\n     * @returns     true/false\r\n     */\r\n    static isFunction(foo) {\r\n        return foo !== undefined && foo !== null && foo.constructor === Function;\r\n    }\r\n    /**\r\n     * 是否为数组\r\n     * @param obj   检查的对象\r\n     * @returns     true/false\r\n     */\r\n    static isArray(obj) {\r\n        return Array.isArray(obj);\r\n    }\r\n    /**\r\n     * 判断是否为map\r\n     * @param obj\r\n     */\r\n    static isMap(obj) {\r\n        return obj !== null && obj !== undefined && obj.constructor === Map;\r\n    }\r\n    /**\r\n     * 是否为对象\r\n     * @param obj   检查的对象\r\n     * @returns true/false\r\n     */\r\n    static isObject(obj) {\r\n        return obj !== null && obj !== undefined && obj.constructor === Object;\r\n    }\r\n    /**\r\n     * 判断是否为整数\r\n     * @param v 检查的值\r\n     * @returns true/false\r\n     */\r\n    static isInt(v) {\r\n        return Number.isInteger(v);\r\n    }\r\n    /**\r\n     * 判断是否为number\r\n     * @param v 检查的值\r\n     * @returns true/false\r\n     */\r\n    static isNumber(v) {\r\n        return typeof v === 'number';\r\n    }\r\n    /**\r\n     * 判断是否为boolean\r\n     * @param v 检查的值\r\n     * @returns true/false\r\n     */\r\n    static isBoolean(v) {\r\n        return typeof v === 'boolean';\r\n    }\r\n    /**\r\n     * 判断是否为字符串\r\n     * @param v 检查的值\r\n     * @returns true/false\r\n     */\r\n    static isString(v) {\r\n        return typeof v === 'string';\r\n    }\r\n    /**\r\n     * 是否为数字串\r\n     * @param v 检查的值\r\n     * @returns true/false\r\n     */\r\n    static isNumberString(v) {\r\n        return /^\\d+\\.?\\d*$/.test(v);\r\n    }\r\n    /**\r\n     * 对象/字符串是否为空\r\n     * @param obj   检查的对象\r\n     * @returns     true/false\r\n     */\r\n    static isEmpty(obj) {\r\n        if (obj === null || obj === undefined)\r\n            return true;\r\n        let tp = typeof obj;\r\n        if (this.isObject(obj)) {\r\n            let keys = Object.keys(obj);\r\n            if (keys !== undefined) {\r\n                return keys.length === 0;\r\n            }\r\n        }\r\n        else if (tp === 'string') {\r\n            return obj === '';\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * 把srcNode替换为nodes\r\n     * @param srcNode       源dom\r\n     * @param nodes         替换的dom或dom数组\r\n     */\r\n    static replaceNode(srcNode, nodes) {\r\n        // if (!this.isNode(srcNode)) {\r\n        //     throw new NError('invoke', 'this.replaceNode', '0', 'Node');\r\n        // }\r\n        // if (!this.isNode(nodes) && !this.isArray(nodes)) {\r\n        //     throw new NError('invoke1', 'this.replaceNode', '1', 'Node', 'Node Array');\r\n        // }\r\n        let pnode = srcNode.parentNode;\r\n        let bnode = srcNode.nextSibling;\r\n        if (pnode === null) {\r\n            return;\r\n        }\r\n        pnode.removeChild(srcNode);\r\n        const nodeArr = this.isArray(nodes) ? nodes : [nodes];\r\n        nodeArr.forEach(function (node) {\r\n            if (bnode === undefined || bnode === null) {\r\n                pnode.appendChild(node);\r\n            }\r\n            else {\r\n                pnode.insertBefore(node, bnode);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * 清空子节点\r\n     * @param el\r\n     */\r\n    static empty(el) {\r\n        const me = this;\r\n        let nodes = el.childNodes;\r\n        for (let i = nodes.length - 1; i >= 0; i--) {\r\n            el.removeChild(nodes[i]);\r\n        }\r\n    }\r\n    /******日期相关******/\r\n    /**\r\n     * 日期格式化\r\n     * @param srcDate   时间戳串\r\n     * @param format    日期格式\r\n     * @returns          日期串\r\n     */\r\n    static formatDate(srcDate, format) {\r\n        //时间戳\r\n        let timeStamp;\r\n        if (this.isString(srcDate)) {\r\n            //排除日期格式串,只处理时间戳\r\n            let reg = /^\\d+$/;\r\n            if (reg.test(srcDate) === true) {\r\n                timeStamp = parseInt(srcDate);\r\n            }\r\n        }\r\n        else if (this.isNumber(srcDate)) {\r\n            timeStamp = srcDate;\r\n        }\r\n        else {\r\n            throw new NError('invoke', 'this.formatDate', '0', 'date string', 'date');\r\n        }\r\n        //得到日期\r\n        let date = new Date(timeStamp);\r\n        // invalid date\r\n        if (isNaN(date.getDay())) {\r\n            return '';\r\n        }\r\n        let o = {\r\n            \"M+\": date.getMonth() + 1,\r\n            \"d+\": date.getDate(),\r\n            \"h+\": date.getHours() % 12 === 0 ? 12 : date.getHours() % 12,\r\n            \"H+\": date.getHours(),\r\n            \"m+\": date.getMinutes(),\r\n            \"s+\": date.getSeconds(),\r\n            \"q+\": Math.floor((date.getMonth() + 3) / 3),\r\n            \"S\": date.getMilliseconds() //毫秒\r\n        };\r\n        //年\r\n        if (/(y+)/.test(format)) {\r\n            format = format.replace(RegExp.$1, (date.getFullYear() + \"\").substr(4 - RegExp.$1.length));\r\n        }\r\n        //月日\r\n        this.getOwnProps(o).forEach(function (k) {\r\n            if (new RegExp(\"(\" + k + \")\").test(format)) {\r\n                format = format.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : ((\"00\" + o[k]).substr((\"\" + o[k]).length)));\r\n            }\r\n        });\r\n        //星期\r\n        if (/(E+)/.test(format)) {\r\n            format = format.replace(RegExp.$1, ((RegExp.$1.length > 1) ? (RegExp.$1.length > 2 ? \"/u661f/u671f\" : \"/u5468\") : \"\") + NodomMessage.WeekDays[date.getDay() + \"\"]);\r\n        }\r\n        return format;\r\n    }\r\n    /******字符串相关*****/\r\n    /**\r\n     * 编译字符串，把{n}替换成带入值\r\n     * @param str 待编译的字符串\r\n     * @param args1,args2,args3,... 待替换的参数\r\n     * @returns 转换后的消息\r\n     */\r\n    static compileStr(src, p1, p2, p3, p4, p5) {\r\n        let reg;\r\n        let args = arguments;\r\n        let index = 0;\r\n        for (;;) {\r\n            if (src.indexOf('\\{' + index + '\\}') !== -1) {\r\n                reg = new RegExp('\\\\{' + index + '\\\\}', 'g');\r\n                src = src.replace(reg, args[index + 1]);\r\n                index++;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        return src;\r\n    }\r\n    /**\r\n     * 函数调用\r\n     * @param foo   函数\r\n     * @param obj   this指向\r\n     * @param args  参数数组\r\n     */\r\n    static apply(foo, obj, args) {\r\n        if (!foo) {\r\n            return;\r\n        }\r\n        return Reflect.apply(foo, obj || null, args);\r\n    }\r\n    /**\r\n     * 合并并修正路径，即路径中出现'//','///','\\/'的情况，统一置换为'/'\r\n     * @param paths 待合并路径数组\r\n     * @returns     返回路径\r\n     */\r\n    static mergePath(paths) {\r\n        return paths.join('/').replace(/(\\/{2,})|\\\\\\//g, '\\/');\r\n    }\r\n    /**\r\n     * eval\r\n     * @param evalStr   eval串\r\n     * @returns         eval值\r\n     */\r\n    static eval(evalStr) {\r\n        return new Function(`return(${evalStr})`)();\r\n    }\r\n    /**\r\n     * 改造 dom key，避免克隆时重复，格式为：key_id\r\n     * @param node  节点\r\n     * @param id    附加id\r\n     * @param deep  是否深度处理\r\n     */\r\n    static setNodeKey(node, id, deep) {\r\n        node.key += '_' + (id || Util.genId());\r\n        if (deep && node.children) {\r\n            for (let c of node.children) {\r\n                Util.setNodeKey(c, id, deep);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * 全局id\r\n */\r\nUtil.generatedId = 1;\r\n/**\r\n * js 保留字 map\r\n */\r\nUtil.keyWordMap = new Map();\r\n//初始化keymap\r\nUtil.initKeyMap();\r\n//# sourceMappingURL=util.js.map","references":["D:/User_zhao/gitRepository/competition/nodom/core/error.ts","D:/User_zhao/gitRepository/competition/nodom/core/event.ts","D:/User_zhao/gitRepository/competition/nodom/core/nodom.ts","D:/User_zhao/gitRepository/competition/nodom/core/virtualdom.ts"],"map":"{\"version\":3,\"file\":\"util.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../core/util.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,SAAS,CAAC;AAEjC,OAAO,EAAE,YAAY,EAAE,MAAM,SAAS,CAAC;AAEvC;;;GAGG;AACH,MAAM,OAAO,IAAI;IAWb,MAAM;IACC,MAAM,CAAC,KAAK;QACf,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC;IAC9B,CAAC;IAED;;OAEG;IACI,MAAM,CAAC,UAAU;QACpB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,WAAW,EAAC,IAAI,CAAC,CAAC;QACtC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,EAAC,IAAI,CAAC,CAAC;QACpC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,EAAC,IAAI,CAAC,CAAC;QAClC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,EAAC,IAAI,CAAC,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,EAAC,IAAI,CAAC,CAAC;QAClC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,EAAC,IAAI,CAAC,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,EAAC,IAAI,CAAC,CAAC;QAClC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,EAAC,IAAI,CAAC,CAAC;QACpC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,EAAC,IAAI,CAAC,CAAC;QACnC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,EAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,EAAC,IAAI,CAAC,CAAC;QACnC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,EAAC,IAAI,CAAC,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,EAAC,IAAI,CAAC,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,EAAC,IAAI,CAAC,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,EAAC,IAAI,CAAC,CAAC;QAClC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,EAAC,IAAI,CAAC,CAAC;QAClC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,EAAC,IAAI,CAAC,CAAC;QAChC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,EAAC,IAAI,CAAC,CAAC;QACrC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,EAAC,IAAI,CAAC,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,EAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,EAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,YAAY,EAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,EAAC,IAAI,CAAC,CAAC;QAChC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,EAAC,IAAI,CAAC,CAAC;QAChC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,EAAC,IAAI,CAAC,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,EAAC,IAAI,CAAC,CAAC;QAChC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,EAAC,IAAI,CAAC,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,EAAC,IAAI,CAAC,CAAC;QACnC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,EAAC,IAAI,CAAC,CAAC;QAClC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,EAAC,IAAI,CAAC,CAAC;QACnC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,EAAC,IAAI,CAAC,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,EAAC,IAAI,CAAC,CAAC;QAClC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,EAAC,IAAI,CAAC,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,EAAC,IAAI,CAAC,CAAC;QAChC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,EAAC,IAAI,CAAC,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,EAAC,IAAI,CAAC,CAAC;QAClC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,EAAC,IAAI,CAAC,CAAC;QACnC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,EAAC,IAAI,CAAC,CAAC;QAChC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,EAAC,IAAI,CAAC,CAAC;QAClC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,EAAC,IAAI,CAAC,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,EAAC,IAAI,CAAC,CAAC;QAClC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,EAAC,IAAI,CAAC,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,EAAC,IAAI,CAAC,CAAC;QAChC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,EAAC,IAAI,CAAC,CAAC;QAChC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,EAAC,IAAI,CAAC,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,EAAC,IAAI,CAAC,CAAC;QACrC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,EAAC,IAAI,CAAC,CAAC;QACrC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,EAAC,IAAI,CAAC,CAAC;QACrC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,EAAC,IAAI,CAAC,CAAC;QAClC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,eAAe,EAAC,IAAI,CAAC,CAAC;QAC1C,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,EAAC,IAAI,CAAC,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,EAAC,IAAI,CAAC,CAAC;QAChC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,EAAC,IAAI,CAAC,CAAC;QACnC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,EAAC,IAAI,CAAC,CAAC;QACnC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,WAAW,EAAC,IAAI,CAAC,CAAC;QACtC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,EAAC,IAAI,CAAC,CAAC;QACnC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,eAAe,EAAC,IAAI,CAAC,CAAC;QAC1C,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,WAAW,EAAC,IAAI,CAAC,CAAC;QACtC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,EAAC,IAAI,CAAC,CAAC;IACxC,CAAC;IACD;;;;OAIG;IACI,MAAM,CAAC,SAAS,CAAC,IAAW;QAC/B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACrC,CAAC;IAED,kBAAkB;IAElB;;;;;;OAMG;IAEI,MAAM,CAAC,KAAK,CAAC,MAAc,EAAE,MAA0B,EAAE,KAAW;QACvE,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,IAAI,GAAG,GAAyB,IAAI,OAAO,EAAE,CAAC;QAC9C,OAAO,KAAK,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;QAEpC;;;;;WAKG;QACH,SAAS,KAAK,CAAC,GAAG,EAAE,MAAM,EAAE,KAAM;YAC9B,yBAAyB;YACzB,IAAI,CAAC,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;gBACzD,OAAO,GAAG,CAAC;aACd;YACD,IAAI,GAAG,CAAC;YAER,uBAAuB;YACvB,IAAI,GAAG,CAAC,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;gBACzC,OAAO,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aAC3B;iBAAM,IAAI,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;gBACzB,GAAG,GAAG,IAAI,MAAM,EAAE,CAAC;gBACnB,iCAAiC;gBACjC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;gBAClB,MAAM,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;oBAC7C,OAAO;oBACP,IAAI,MAAM,EAAE;wBACR,IAAI,MAAM,CAAC,WAAW,KAAK,MAAM,IAAa,MAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,cAAc;+BACxE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAY,MAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAwB,UAAU;0BAC7F;4BACE,OAAO;yBACV;qBACJ;oBACD,GAAG,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;gBACtD,CAAC,CAAC,CAAC;aACN;iBAAM,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;gBACtB,GAAG,GAAG,IAAI,GAAG,EAAE,CAAC;gBAChB,iCAAiC;gBACjC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE;oBACvB,OAAO;oBACP,IAAI,MAAM,EAAE;wBACR,IAAI,MAAM,CAAC,WAAW,KAAK,MAAM,IAAa,MAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAO,cAAc;+BACrE,MAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,EAAM,UAAU;4BAClD,OAAO;yBACV;qBACJ;oBACD,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,WAAW,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC;gBACpD,CAAC,CAAC,CAAC;aACN;iBAAM,IAAI,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;gBACxB,GAAG,GAAG,IAAI,KAAK,EAAE,CAAC;gBAClB,iCAAiC;gBACjC,GAAG,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE,CAAC;oBACzB,GAAG,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;gBAC9C,CAAC,CAAC,CAAC;aACN;YACD,OAAO,GAAG,CAAC;QACf,CAAC;QAED;;;;;WAKG;QACH,SAAS,WAAW,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK;YACrC,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;gBACtD,IAAI,EAAE,GAAG,IAAI,CAAC;gBACd,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,EAAG,UAAU;oBAC9B,EAAE,GAAG,KAAK,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;iBACpC;qBAAM,EAAqB,WAAW;oBACnC,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;iBACvB;gBACD,OAAO,EAAE,CAAC;aACb;YACD,OAAO,KAAK,CAAC;QACjB,CAAC;IACL,CAAC;IACD;;;;OAIG;IACI,MAAM,CAAC,KAAK,CAAC,EAAW,EAAE,EAAW,EAAE,EAAW,EAAE,EAAW,EAAE,EAAW,EAAE,EAAW;QAC5F,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACvC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;gBAC9B,MAAM,IAAI,MAAM,CAAC,QAAQ,EAAE,YAAY,EAAE,CAAC,GAAG,EAAE,EAAE,QAAQ,CAAC,CAAC;aAC9D;SACJ;QACD,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QAClD,MAAM,CAAC,MAAM,CAAC,CAAC;QACf,OAAO,MAAM,CAAC;QACd,OAAO;QACP,SAAS,MAAM,CAAC,GAAG;YACf,KAAK,IAAI,CAAC,IAAI,GAAG,EAAE;gBACf,IAAI,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,OAAO;oBACpD,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;iBACnC;aACJ;QACL,CAAC;IACL,CAAC;IAED;;OAEG;IACI,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI;QAC3B,IAAI,MAAM,CAAC,MAAM,EAAE;YACf,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SAC7B;aAAM;YACH,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC;gBACtC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACtB,CAAC,CAAC,CAAC;SACN;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;;OAKG;IACI,MAAM,CAAC,OAAO,CAAC,GAAO,EAAC,GAAO,EAAC,IAAa;QAC/C,IAAG,CAAC,GAAG,IAAI,CAAC,GAAG,EAAC;YACZ,OAAO,IAAI,CAAC;SACf;QACD,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YACpD,OAAO,KAAK,CAAC;SAChB;QACD,MAAM,IAAI,GAAG,MAAM,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;QAC7C,IAAG,IAAI,CAAC,MAAM,KAAK,MAAM,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC,MAAM,EAAC;YACtD,OAAO,KAAK,CAAC;SAChB;QACD,KAAI,IAAI,CAAC,IAAI,IAAI,EAAC;YACd,IAAG,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,EAAC;gBACjB,OAAO,KAAK,CAAC;aAChB;SACJ;QACD,MAAM;QACN,IAAG,IAAI,EAAC;YACJ,KAAI,IAAI,CAAC,IAAI,IAAI,EAAC;gBACd,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBACpC,IAAG,CAAC,CAAC,EAAC;oBACF,OAAO,KAAK,CAAC;iBAChB;aACJ;SACJ;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IACD;;OAEG;IACI,MAAM,CAAC,WAAW,CAAC,GAAG;QACzB,IAAI,CAAC,GAAG,EAAE;YACN,OAAO,EAAE,CAAC;SACb;QACD,OAAO,MAAM,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;IAC3C,CAAC;IACD,kCAAkC;IAClC;;;;OAIG;IACI,MAAM,CAAC,UAAU,CAAC,GAAG;QACxB,OAAO,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,CAAC,WAAW,KAAK,QAAQ,CAAC;IAC7E,CAAC;IAED;;;;OAIG;IACI,MAAM,CAAC,OAAO,CAAC,GAAG;QACrB,OAAO,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAC9B,CAAC;IAED;;;OAGG;IACI,MAAM,CAAC,KAAK,CAAC,GAAG;QACnB,OAAO,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,IAAI,GAAG,CAAC,WAAW,KAAK,GAAG,CAAC;IACxE,CAAC;IAED;;;;OAIG;IACI,MAAM,CAAC,QAAQ,CAAC,GAAG;QACtB,OAAO,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,IAAI,GAAG,CAAC,WAAW,KAAK,MAAM,CAAC;IAC3E,CAAC;IAED;;;;OAIG;IACI,MAAM,CAAC,KAAK,CAAC,CAAC;QACjB,OAAO,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC;IACD;;;;OAIG;IACI,MAAM,CAAC,QAAQ,CAAC,CAAC;QACpB,OAAO,OAAO,CAAC,KAAK,QAAQ,CAAC;IACjC,CAAC;IAED;;;;OAIG;IACI,MAAM,CAAC,SAAS,CAAC,CAAC;QACrB,OAAO,OAAO,CAAC,KAAK,SAAS,CAAC;IAClC,CAAC;IACD;;;;OAIG;IACI,MAAM,CAAC,QAAQ,CAAC,CAAC;QACpB,OAAO,OAAO,CAAC,KAAK,QAAQ,CAAC;IACjC,CAAC;IAED;;;;OAIG;IACI,MAAM,CAAC,cAAc,CAAC,CAAC;QAC1B,OAAO,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC;IAED;;;;OAIG;IACI,MAAM,CAAC,OAAO,CAAC,GAAG;QACrB,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS;YACjC,OAAO,IAAI,CAAC;QAChB,IAAI,EAAE,GAAG,OAAO,GAAG,CAAC;QACpB,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;YACpB,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAC5B,IAAI,IAAI,KAAK,SAAS,EAAE;gBACpB,OAAO,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC;aAC5B;SACJ;aAAM,IAAI,EAAE,KAAK,QAAQ,EAAE;YACxB,OAAO,GAAG,KAAK,EAAE,CAAC;SACrB;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAGD;;;;OAIG;IACI,MAAM,CAAC,WAAW,CAAC,OAAa,EAAE,KAAyB;QAC9D,+BAA+B;QAC/B,mEAAmE;QACnE,IAAI;QAEJ,qDAAqD;QACrD,kFAAkF;QAClF,IAAI;QACJ,IAAI,KAAK,GAAS,OAAO,CAAC,UAAU,CAAC;QACrC,IAAI,KAAK,GAAS,OAAO,CAAC,WAAW,CAAC;QACtC,IAAI,KAAK,KAAK,IAAI,EAAE;YAChB,OAAO;SACV;QACD,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAC3B,MAAM,OAAO,GAAgB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAS,KAAK,CAAC,CAAC,CAAC,CAAO,KAAK,CAAC,CAAC;QACjF,OAAO,CAAC,OAAO,CAAC,UAAU,IAAI;YAC1B,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;gBACvC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;aAC3B;iBAAM;gBACH,KAAK,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;aACnC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;OAGG;IACI,MAAM,CAAC,KAAK,CAAC,EAAe;QAC/B,MAAM,EAAE,GAAG,IAAI,CAAC;QAChB,IAAI,KAAK,GAAa,EAAE,CAAC,UAAU,CAAC;QACpC,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;YACxC,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SAC5B;IACL,CAAC;IAED,kBAAkB;IAClB;;;;;OAKG;IACI,MAAM,CAAC,UAAU,CAAC,OAAwB,EAAE,MAAc;QAC7D,KAAK;QACL,IAAI,SAAiB,CAAC;QACtB,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;YACxB,gBAAgB;YAChB,IAAI,GAAG,GAAG,OAAO,CAAC;YAClB,IAAI,GAAG,CAAC,IAAI,CAAS,OAAO,CAAC,KAAK,IAAI,EAAE;gBACpC,SAAS,GAAG,QAAQ,CAAS,OAAO,CAAC,CAAC;aACzC;SACJ;aAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;YAC/B,SAAS,GAAW,OAAO,CAAC;SAC/B;aAAM;YACH,MAAM,IAAI,MAAM,CAAC,QAAQ,EAAE,iBAAiB,EAAE,GAAG,EAAE,aAAa,EAAE,MAAM,CAAC,CAAC;SAC7E;QACD,MAAM;QACN,IAAI,IAAI,GAAS,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC;QACrC,eAAe;QACf,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE;YACtB,OAAO,EAAE,CAAC;SACb;QAED,IAAI,CAAC,GAAG;YACJ,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC;YACzB,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE;YACpB,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,EAAE;YAC5D,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE;YACrB,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE;YACvB,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE;YACvB,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;YAC3C,GAAG,EAAE,IAAI,CAAC,eAAe,EAAE,CAAC,IAAI;SACnC,CAAC;QAEF,GAAG;QACH,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YACrB,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;SAC9F;QACD,IAAI;QACJ,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC;YACnC,IAAI,IAAI,MAAM,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;gBACxC,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;aACrH;QACL,CAAC,CAAC,CAAC;QAEH,IAAI;QACJ,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YACrB,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;SACtK;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,kBAAkB;IAClB;;;;;OAKG;IACI,MAAM,CAAC,UAAU,CAAC,GAAW,EAAE,EAAQ,EAAE,EAAQ,EAAE,EAAQ,EAAE,EAAQ,EAAE,EAAQ;QAClF,IAAI,GAAW,CAAC;QAChB,IAAI,IAAI,GAAG,SAAS,CAAC;QACrB,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,SAAU;YACN,IAAI,GAAG,CAAC,OAAO,CAAC,IAAI,GAAG,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;gBACzC,GAAG,GAAG,IAAI,MAAM,CAAC,KAAK,GAAG,KAAK,GAAG,KAAK,EAAE,GAAG,CAAC,CAAC;gBAC7C,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;gBACxC,KAAK,EAAE,CAAC;aACX;iBAAM;gBACH,MAAM;aACT;SACJ;QACD,OAAO,GAAG,CAAC;IACf,CAAC;IAED;;;;;OAKG;IACI,MAAM,CAAC,KAAK,CAAC,GAAa,EAAE,GAAQ,EAAE,IAAiB;QAC1D,IAAI,CAAC,GAAG,EAAE;YACN,OAAO;SACV;QACD,OAAO,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,IAAI,IAAI,EAAE,IAAI,CAAC,CAAC;IACjD,CAAC;IAED;;;;OAIG;IACI,MAAM,CAAC,SAAS,CAAC,KAAe;QACnC,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;IAC3D,CAAC;IAED;;;;OAIG;IACI,MAAM,CAAC,IAAI,CAAC,OAAe;QAC9B,OAAO,IAAI,QAAQ,CAAC,UAAU,OAAO,GAAG,CAAC,EAAE,CAAC;IAChD,CAAC;IAED;;;;;OAKG;IACI,MAAM,CAAC,UAAU,CAAC,IAAe,EAAE,EAAU,EAAC,IAAa;QAC9D,IAAI,CAAC,GAAG,IAAI,GAAG,GAAG,CAAC,EAAE,IAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;QACrC,IAAG,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAC;YACrB,KAAI,IAAI,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACxB,IAAI,CAAC,UAAU,CAAC,CAAC,EAAC,EAAE,EAAC,IAAI,CAAC,CAAC;aAC9B;SACJ;IACL,CAAC;;AA1gBD;;GAEG;AACY,gBAAW,GAAW,CAAC,CAAC;AAEvC;;GAEG;AACW,eAAU,GAAG,IAAI,GAAG,EAAE,CAAC;AAqgBzC,WAAW;AACX,IAAI,CAAC,UAAU,EAAE,CAAC\"}"}
