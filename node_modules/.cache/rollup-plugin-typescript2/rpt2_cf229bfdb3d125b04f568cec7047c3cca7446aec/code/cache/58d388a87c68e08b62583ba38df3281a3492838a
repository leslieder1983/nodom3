{"code":"import { ModelManager } from \"./modelmanager\";\r\nimport { Util } from \"./util\";\r\n/**\r\n * 模型类\r\n */\r\nexport class Model {\r\n    /**\r\n     * @param data \t\t数据\r\n     * @param module \t模块对象\r\n     * @returns         模型代理对象\r\n     */\r\n    constructor(data, module) {\r\n        //模型管理器\r\n        let proxy = new Proxy(data, {\r\n            set: (src, key, value, receiver) => {\r\n                //值未变,proxy 不处理\r\n                if (src[key] === value) {\r\n                    return true;\r\n                }\r\n                //不处理原型属性和构造器 \r\n                if (['__proto__', 'constructor'].includes(key)) {\r\n                    return true;\r\n                }\r\n                const excArr = [\"$key\"];\r\n                //非对象，null，非model更新渲染\r\n                if (typeof value !== 'function' && excArr.indexOf(key) === -1) {\r\n                    ModelManager.update(proxy, key, src[key], value);\r\n                }\r\n                return Reflect.set(src, key, value, receiver);\r\n            },\r\n            get: (src, key, receiver) => {\r\n                let res = Reflect.get(src, key, receiver);\r\n                //数组的sort和fill触发强行渲染\r\n                if (Array.isArray(src) && ['sort', 'fill'].indexOf(key) !== -1) { //强制渲染\r\n                    ModelManager.update(proxy, null, null, null, true);\r\n                }\r\n                let data = ModelManager.getFromDataMap(src[key]);\r\n                if (data) {\r\n                    return data;\r\n                }\r\n                if (res !== null && typeof res === 'object') {\r\n                    //如果是对象，则返回代理，便于后续激活get set方法                   \r\n                    //判断是否已经代理，如果未代理，则增加代理\r\n                    if (!src[key].$key) {\r\n                        let p = new Model(res, module);\r\n                        return p;\r\n                    }\r\n                }\r\n                return res;\r\n            },\r\n            deleteProperty: function (src, key) {\r\n                //如果删除对象，从mm中同步删除\r\n                if (src[key] !== null && typeof src[key] === 'object') {\r\n                    ModelManager.delFromDataMap(src[key]);\r\n                    ModelManager.delModel(src[key]);\r\n                }\r\n                delete src[key];\r\n                ModelManager.update(proxy, key, null, null, true);\r\n                return true;\r\n            }\r\n        });\r\n        proxy.$watch = this.$watch;\r\n        proxy.$get = this.$get;\r\n        proxy.$set = this.$set;\r\n        proxy.$key = Util.genId();\r\n        ModelManager.addToDataMap(data, proxy);\r\n        ModelManager.addModel(proxy, data);\r\n        //绑定到模块\r\n        if (module) {\r\n            ModelManager.bindToModule(proxy, module);\r\n        }\r\n        return proxy;\r\n    }\r\n    /**\r\n     * 观察(取消观察)某个数据项\r\n     * @param key       数据项名\r\n     * @param operate   数据项变化时执行方法名(在module的methods中定义)\r\n     * @param cancel    取消观察\r\n     */\r\n    $watch(key, operate, cancel) {\r\n        let model = this;\r\n        let index = -1;\r\n        //如果带'.'，则只取最里面那个对象\r\n        if ((index = key.lastIndexOf('.')) !== -1) {\r\n            model = this.$get(key.substr(0, index));\r\n            key = key.substr(index + 1);\r\n        }\r\n        if (!model) {\r\n            return;\r\n        }\r\n        if (cancel) {\r\n            ModelManager.removeWatcher(model, key, operate);\r\n        }\r\n        else {\r\n            ModelManager.addWatcher(model, key, operate);\r\n        }\r\n    }\r\n    /**\r\n     * 查询子属性\r\n     * @param key   子属性，可以分级，如 name.firstName\r\n     * @returns     属性对应model proxy\r\n     */\r\n    $get(key) {\r\n        let model = this;\r\n        if (key.indexOf('.') !== -1) { //层级字段\r\n            let arr = key.split('.');\r\n            for (let i = 0; i < arr.length - 1; i++) {\r\n                model = model[arr[i]];\r\n                if (!model) {\r\n                    break;\r\n                }\r\n            }\r\n            if (!model) {\r\n                return;\r\n            }\r\n            key = arr[arr.length - 1];\r\n        }\r\n        return model[key];\r\n    }\r\n    /**\r\n     * 设置值\r\n     * @param key       子属性，可以分级，如 name.firstName\r\n     * @param value     属性值\r\n     * @param module    需要绑定的新模块\r\n     */\r\n    $set(key, value, module) {\r\n        let model = this;\r\n        let mids = ModelManager.getModuleIds(this);\r\n        if (key.indexOf('.') !== -1) { //层级字段\r\n            let arr = key.split('.');\r\n            for (let i = 0; i < arr.length - 1; i++) {\r\n                //不存在，则创建新的model\r\n                if (!model[arr[i]]) {\r\n                    let m = new Model({});\r\n                    ModelManager.bindToModules(m, mids);\r\n                    model[arr[i]] = m;\r\n                }\r\n            }\r\n            key = arr[arr.length - 1];\r\n        }\r\n        //绑定model到模块\r\n        if (typeof value === 'object' && module) {\r\n            ModelManager.bindToModule(value, module);\r\n        }\r\n        model[key] = value;\r\n    }\r\n}\r\n//# sourceMappingURL=model.js.map","references":["D:/User_zhao/gitRepository/competition/nodom/core/modelmanager.ts","D:/User_zhao/gitRepository/competition/nodom/core/module.ts","D:/User_zhao/gitRepository/competition/nodom/core/util.ts"],"map":"{\"version\":3,\"file\":\"model.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../core/model.ts\"],\"names\":[],\"mappings\":\"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\"}"}
