{"code":"/**\r\n * 比较器\r\n */\r\nexport class DiffTool {\r\n    /**\r\n     * 比较节点\r\n     * @param src           待比较节点（渲染后节点）\r\n     * @param dst \t        被比较节点\r\n     * @param changeArr     增删改的节点数组\r\n     * @returns\t            [[type(add 1, upd 2,del 3,move 4 ,rep 5),dom(操作节点),dom1(被替换或修改节点),parent(父节点),loc(位置)]]\r\n     */\r\n    static compare(src, dst, changeArr) {\r\n        if (!src.tagName) { //文本节点\r\n            if (!dst.tagName) {\r\n                if ((src.staticNum || dst.staticNum) && src.textContent !== dst.textContent) {\r\n                    addChange(2, src, null, dst.parent);\r\n                }\r\n            }\r\n            else { //节点类型不同\r\n                addChange(5, src, null, dst.parent);\r\n            }\r\n        }\r\n        else { //element节点\r\n            if (src.tagName !== dst.tagName) { //节点类型不同\r\n                addChange(5, src, null, dst.parent);\r\n            }\r\n            else if (src.staticNum || dst.staticNum) { //节点类型相同，但有一个不是静态节点，进行属性和asset比较\r\n                let change = false;\r\n                for (let p of ['props', 'assets']) {\r\n                    //属性比较\r\n                    if (!src[p] && dst[p] || src[p] && !dst[p]) {\r\n                        change = true;\r\n                    }\r\n                    else if (src[p] && dst[p]) {\r\n                        if (src[p].size !== dst[p].size) {\r\n                            change = true;\r\n                        }\r\n                        else {\r\n                            for (let k of src[p]) {\r\n                                if (k[1] !== dst[p].get(k[0])) {\r\n                                    change = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    if (change) {\r\n                        addChange(2, src, null, dst.parent);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (src.staticNum > 0) {\r\n            src.staticNum--;\r\n        }\r\n        //子节点处理\r\n        if (!src.children || src.children.length === 0) {\r\n            // 旧节点的子节点全部删除\r\n            if (dst.children && dst.children.length > 0) {\r\n                dst.children.forEach(item => addChange(3, item, null, dst));\r\n            }\r\n        }\r\n        else {\r\n            //全部新加节点\r\n            if (!dst.children || dst.children.length === 0) {\r\n                src.children.forEach(item => addChange(1, item, null, dst));\r\n            }\r\n            else { //都有子节点\r\n                //存储比较后需要add的key\r\n                let addObj = {};\r\n                //子节点对比策略\r\n                let [oldStartIdx, oldStartNode, oldEndIdx, oldEndNode] = [0, dst.children[0], dst.children.length - 1, dst.children[dst.children.length - 1]];\r\n                let [newStartIdx, newStartNode, newEndIdx, newEndNode] = [0, src.children[0], src.children.length - 1, src.children[src.children.length - 1]];\r\n                while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\r\n                    if (sameKey(oldStartNode, newStartNode)) {\r\n                        DiffTool.compare(newStartNode, oldStartNode, changeArr);\r\n                        newStartNode = src.children[++newStartIdx];\r\n                        oldStartNode = dst.children[++oldStartIdx];\r\n                    }\r\n                    else if (sameKey(oldEndNode, newEndNode)) {\r\n                        DiffTool.compare(newEndNode, oldEndNode, changeArr);\r\n                        newEndNode = src.children[--newEndIdx];\r\n                        oldEndNode = dst.children[--oldEndIdx];\r\n                    }\r\n                    else if (sameKey(newStartNode, oldEndNode)) {\r\n                        //新前旧后\r\n                        DiffTool.compare(newStartNode, oldEndNode, changeArr);\r\n                        //跳过插入点会提前移动的节点\r\n                        while (addObj.hasOwnProperty(oldStartNode.key)) {\r\n                            changeArr[addObj[oldStartNode.key]][0] = 4;\r\n                            delete addObj[oldStartNode.key];\r\n                            oldStartNode = dst.children[++oldStartIdx];\r\n                        }\r\n                        //接在待操作老节点前面\r\n                        addChange(4, oldEndNode, oldStartNode, dst);\r\n                        newStartNode = src.children[++newStartIdx];\r\n                        oldEndNode = dst.children[--oldEndIdx];\r\n                    }\r\n                    else if (sameKey(newEndNode, oldStartNode)) {\r\n                        DiffTool.compare(newEndNode, oldStartNode, changeArr);\r\n                        //跳过插入点会提前移动的节点\r\n                        while (addObj.hasOwnProperty(oldEndNode.key)) {\r\n                            changeArr[addObj[oldEndNode.key]][0] = 4;\r\n                            delete addObj[oldEndNode.key];\r\n                            oldEndNode = dst.children[--oldEndIdx];\r\n                        }\r\n                        //接在 oldEndIdx 之后，但是再下一个节点可能移动位置，所以记录oldEndIdx节点\r\n                        addChange(4, oldStartNode, oldEndNode, dst, 1);\r\n                        newEndNode = src.children[--newEndIdx];\r\n                        oldStartNode = dst.children[++oldStartIdx];\r\n                    }\r\n                    else {\r\n                        //跳过插入点会提前移动的节点\r\n                        if (addObj.hasOwnProperty(oldStartNode.key)) {\r\n                            while (addObj.hasOwnProperty(oldStartNode.key)) {\r\n                                changeArr[addObj[oldStartNode.key]][0] = 4;\r\n                                delete addObj[oldStartNode.key];\r\n                                oldStartNode = dst.children[++oldStartIdx];\r\n                            }\r\n                            continue; //继续diff，暂不add\r\n                        }\r\n                        //加入到addObj\r\n                        addObj[newStartNode.key] = addChange(1, newStartNode, oldStartNode, dst) - 1;\r\n                        newStartNode = src.children[++newStartIdx];\r\n                    }\r\n                }\r\n                //有新增或删除节点\r\n                if (oldStartIdx <= oldEndIdx || newStartIdx <= newEndIdx) {\r\n                    if (oldStartIdx > oldEndIdx) {\r\n                        //没有老节点\r\n                        for (let i = newStartIdx; i <= newEndIdx; i++) {\r\n                            // 添加到dst.children[i]前面\r\n                            addChange(1, src.children[i], i, dst);\r\n                        }\r\n                    }\r\n                    else {\r\n                        //有老节点，需要删除\r\n                        for (let i = oldStartIdx; i <= oldEndIdx; i++) {\r\n                            let ch = dst.children[i];\r\n                            //如果要删除的节点在addArr中，则表示move，否则表示删除\r\n                            if (!addObj.hasOwnProperty(ch.key)) {\r\n                                addChange(3, ch, null, dst);\r\n                            }\r\n                            else {\r\n                                changeArr[addObj[ch.key]][0] = 4;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * 是否有相同key\r\n         * @param src   源节点\r\n         * @param dst   目标节点\r\n         * @returns     相同key为true，否则为false\r\n         */\r\n        function sameKey(src, dst) {\r\n            return src.key === dst.key;\r\n        }\r\n        /**\r\n         * 添加刪除替換\r\n        * @param type       类型 add 1, upd 2,del 3,move 4 ,rep 5\r\n        * @param dom        虚拟节点\r\n        * @param dom1       相对节点\r\n        * @param parent     父节点\r\n        * @param extra      move时 0:相对节点前，1:相对节点后\r\n        */\r\n        function addChange(type, dom, dom1, parent, loc) {\r\n            return changeArr.push([type, dom, dom1, parent, loc]);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=difftool.js.map","references":["D:/User_zhao/gitRepository/competition/nodom/core/virtualdom.ts"],"map":"{\"version\":3,\"file\":\"difftool.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../core/difftool.ts\"],\"names\":[],\"mappings\":\"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\"}"}
