{"code":"import { DirectiveManager } from \"./directivemanager\";\r\nimport { Util } from \"./util\";\r\n/**\r\n * 虚拟dom\r\n */\r\nexport class VirtualDom {\r\n    /**\r\n     * @param tag       标签名\r\n     * @param key       key\r\n     */\r\n    constructor(tag, key) {\r\n        /**\r\n         * 父虚拟dom\r\n         */\r\n        // public parent: VirtualDom;\r\n        /**\r\n         * staticNum 静态标识数\r\n         *  0 表示静态，不进行比较\r\n         *  > 0 每次比较后-1\r\n         *  < 0 不处理\r\n         */\r\n        this.staticNum = 0;\r\n        /**\r\n         * 对应的所有表达式的字段都属于dom model内\r\n         */\r\n        this.allModelField = true;\r\n        this.key = key || (Util.genId() + '');\r\n        if (tag) {\r\n            this.tagName = tag;\r\n        }\r\n    }\r\n    /**\r\n     * 移除多个指令\r\n     * @param directives \t待删除的指令类型数组或指令类型\r\n     */\r\n    removeDirectives(directives) {\r\n        if (!this.directives) {\r\n            return;\r\n        }\r\n        //数组\r\n        directives.forEach(d => {\r\n            this.removeDirective(d);\r\n        });\r\n    }\r\n    /**\r\n     * 移除指令\r\n     * @param directive \t待删除的指令类型名\r\n     */\r\n    removeDirective(directive) {\r\n        if (!this.directives) {\r\n            return;\r\n        }\r\n        let ind;\r\n        if ((ind = this.directives.findIndex(item => item.type.name === directive)) !== -1) {\r\n            this.directives.splice(ind, 1);\r\n        }\r\n        if (this.directives.length === 0) {\r\n            delete this.directives;\r\n        }\r\n    }\r\n    /**\r\n     * 添加指令\r\n     * @param directive     指令对象\r\n     * @param sort          是否排序\r\n     */\r\n    addDirective(directive, sort) {\r\n        if (!this.directives) {\r\n            this.directives = [];\r\n        }\r\n        else if (this.directives.find(item => item.type.name === directive.type.name)) {\r\n            return;\r\n        }\r\n        this.directives.push(directive);\r\n        //指令按优先级排序\r\n        if (sort) {\r\n            this.sortDirective();\r\n        }\r\n    }\r\n    /**\r\n     * 指令排序\r\n     */\r\n    sortDirective() {\r\n        if (!this.directives) {\r\n            return;\r\n        }\r\n        if (this.directives.length > 1) {\r\n            this.directives.sort((a, b) => {\r\n                return DirectiveManager.getType(a.type.name).prio < DirectiveManager.getType(b.type.name).prio ? -1 : 1;\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * 是否有某个类型的指令\r\n     * @param typeName \t    指令类型名\r\n     * @returns             true/false\r\n     */\r\n    hasDirective(typeName) {\r\n        return this.directives && this.directives.findIndex(item => item.type.name === typeName) !== -1;\r\n    }\r\n    /**\r\n     * 获取某个类型的指令\r\n     * @param module            模块\r\n     * @param directiveType \t指令类型名\r\n     * @returns                 指令对象\r\n     */\r\n    getDirective(directiveType) {\r\n        if (!this.directives) {\r\n            return;\r\n        }\r\n        return this.directives.find(item => item.type.name === directiveType);\r\n    }\r\n    /**\r\n     * 添加子节点\r\n     */\r\n    add(dom) {\r\n        if (!this.children) {\r\n            this.children = [];\r\n        }\r\n        this.children.push(dom);\r\n    }\r\n    /**\r\n     * 是否存在某个class\r\n     * @param cls   classname\r\n     * @return      true/false\r\n     */\r\n    hasClass(cls) {\r\n        let clazz = this.getProp('class');\r\n        if (!clazz) {\r\n            return false;\r\n        }\r\n        else {\r\n            return clazz.trim().split(/\\s+/).includes(cls);\r\n        }\r\n    }\r\n    /**\r\n     * 添加css class\r\n     * @param cls class名\r\n     */\r\n    addClass(cls) {\r\n        let clazz = this.getProp('class');\r\n        if (!clazz || clazz === '') {\r\n            this.setProp('class', cls);\r\n            this.setStaticOnce();\r\n        }\r\n        else {\r\n            let sa = clazz.trim().split(/\\s+/);\r\n            if (!sa.includes(cls)) {\r\n                sa.push(cls);\r\n                clazz = sa.join(' ');\r\n                this.setProp('class', clazz);\r\n                this.setStaticOnce();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 删除css class\r\n     * @param cls class名\r\n     */\r\n    removeClass(cls) {\r\n        let clazz = this.getProp('class');\r\n        if (!clazz || clazz === '') {\r\n            return;\r\n        }\r\n        else {\r\n            let sa = clazz.trim().split(/\\s+/);\r\n            let index;\r\n            if ((index = sa.indexOf(cls)) !== -1) {\r\n                sa.splice(index, 1);\r\n                clazz = sa.join(' ');\r\n            }\r\n        }\r\n        this.setProp('class', clazz);\r\n    }\r\n    /**\r\n     * 查询style\r\n     * @param styStr style字符串\r\n     */\r\n    hasStyle(styStr) {\r\n        let styleStr = this.getProp('style');\r\n        if (!styleStr) {\r\n            return false;\r\n        }\r\n        else {\r\n            return styleStr.trim().split(/;\\s+/).includes(styStr);\r\n        }\r\n    }\r\n    /**\r\n     * 添加style\r\n     *  @param styStr style字符串\r\n     */\r\n    addStyle(styStr) {\r\n        let styleStr = this.getProp('style');\r\n        if (!styleStr) {\r\n            this.setProp('style', styStr);\r\n            this.setStaticOnce();\r\n        }\r\n        else {\r\n            let sa = styleStr.trim().split(/;\\s+/);\r\n            if (!sa.includes(styStr)) {\r\n                sa.push(styStr);\r\n                styleStr = sa.join(';');\r\n                this.setProp('style', styleStr);\r\n                this.setStaticOnce();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 删除style\r\n     * @param styStr style字符串\r\n     */\r\n    removeStyle(styStr) {\r\n        let styleStr = this.getProp('style');\r\n        if (!styleStr) {\r\n            return;\r\n        }\r\n        else {\r\n            let sa = styleStr.trim().split(/;\\s+/);\r\n            let index;\r\n            if ((index = sa.indexOf(styStr)) !== -1) {\r\n                sa.splice(index, 1);\r\n                styleStr = sa.join(';');\r\n            }\r\n        }\r\n        this.setProp('style', styleStr);\r\n        this.setStaticOnce();\r\n    }\r\n    /**\r\n     * 是否拥有属性\r\n     * @param propName  属性名\r\n     * @param isExpr    是否只检查表达式属性\r\n     */\r\n    hasProp(propName) {\r\n        if (this.props) {\r\n            return this.props.has(propName);\r\n        }\r\n    }\r\n    /**\r\n     * 获取属性值\r\n     * @param propName  属性名\r\n     * @param isExpr    是否只获取表达式属性\r\n     */\r\n    getProp(propName, isExpr) {\r\n        if (this.props) {\r\n            return this.props.get(propName);\r\n        }\r\n    }\r\n    /**\r\n     * 设置属性值\r\n     * @param propName  属性名\r\n     * @param v         属性值\r\n     */\r\n    setProp(propName, v) {\r\n        if (!this.props) {\r\n            this.props = new Map();\r\n        }\r\n        this.props.set(propName, v);\r\n    }\r\n    /**\r\n     * 删除属性\r\n     * @param props     属性名或属性名数组\r\n     */\r\n    delProp(props) {\r\n        if (!this.props) {\r\n            return;\r\n        }\r\n        if (Util.isArray(props)) {\r\n            for (let p of props) {\r\n                this.props.delete(p);\r\n            }\r\n        }\r\n        else {\r\n            this.props.delete(props);\r\n        }\r\n        //设置静态标志，至少要比较一次\r\n        this.setStaticOnce();\r\n    }\r\n    /**\r\n     * 设置asset\r\n     * @param assetName     asset name\r\n     * @param value         asset value\r\n     */\r\n    setAsset(assetName, value) {\r\n        if (!this.assets) {\r\n            this.assets = new Map();\r\n        }\r\n        this.assets.set(assetName, value);\r\n    }\r\n    /**\r\n     * 删除asset\r\n     * @param assetName     asset name\r\n     */\r\n    delAsset(assetName) {\r\n        if (!this.assets) {\r\n            return;\r\n        }\r\n        this.assets.delete(assetName);\r\n    }\r\n    /**\r\n     * 添加事件\r\n     * @param event     事件对象\r\n     */\r\n    addEvent(event) {\r\n        if (!this.events) {\r\n            this.events = new Map();\r\n        }\r\n        if (!this.events.has(event.name)) {\r\n            this.events.set(event.name, [event.id]);\r\n        }\r\n        else {\r\n            let arr = this.events.get(event.name);\r\n            //已添加的事件，不再添加\r\n            if (arr.indexOf(event.id) === -1) {\r\n                arr.push(event.id);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 获取事件集\r\n     * @param eventName     事件名\r\n     * @returns             事件对象或事件对象数组\r\n     */\r\n    getEvent(eventName) {\r\n        if (this.events) {\r\n            return this.events.get(eventName);\r\n        }\r\n    }\r\n    /**\r\n     * 设置事件集\r\n     * @param eventName     事件名\r\n     * @param events        事件数组\r\n     */\r\n    setEvent(eventName, events) {\r\n        if (!this.events) {\r\n            this.events = new Map();\r\n        }\r\n        this.events.set(eventName, events);\r\n    }\r\n    /**\r\n     * 获取html dom\r\n     * @param module    模块\r\n     * @returns         对应的html dom\r\n     */\r\n    getEl(module) {\r\n        return module.getNode(this.key);\r\n    }\r\n    /**\r\n     * 查找子孙节点\r\n     * @param key \telement key\r\n     * @returns\t\t虚拟dom/undefined\r\n     */\r\n    query(key) {\r\n        if (this.key === key) {\r\n            return this;\r\n        }\r\n        if (this.children) {\r\n            for (let i = 0; i < this.children.length; i++) {\r\n                let dom = this.children[i].query(key);\r\n                if (dom) {\r\n                    return dom;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 设置cache参数\r\n     * @param module    模块\r\n     * @param name      参数名\r\n     * @param value     参数值\r\n     */\r\n    setParam(module, name, value) {\r\n        module.objectManager.setElementParam(this.key, name, value);\r\n    }\r\n    /**\r\n     * 获取参数值\r\n     * @param module    模块\r\n     * @param name      参数名\r\n     * @returns         参数值\r\n     */\r\n    getParam(module, name) {\r\n        return module.objectManager.getElementParam(this.key, name);\r\n    }\r\n    /**\r\n     * 移除参数\r\n     * @param module    模块\r\n     * @param name      参数名\r\n     */\r\n    removeParam(module, name) {\r\n        module.objectManager.removeElementParam(this.key, name);\r\n    }\r\n    /**\r\n     * 设置单次静态标志\r\n     */\r\n    setStaticOnce() {\r\n        if (this.staticNum !== -1) {\r\n            this.staticNum = 1;\r\n        }\r\n    }\r\n    /**\r\n     * 克隆\r\n     * @param changeKey     是否更改key，如果为true，则生成的节点用新的key\r\n     */\r\n    clone() {\r\n        let dst = new VirtualDom(this.tagName, this.key);\r\n        if (this.tagName) {\r\n            //属性\r\n            if (this.props && this.props.size > 0) {\r\n                for (let p of this.props) {\r\n                    dst.setProp(p[0], p[1]);\r\n                }\r\n            }\r\n            if (this.assets && this.assets.size > 0) {\r\n                for (let p of this.assets) {\r\n                    dst.setAsset(p[0], p[1]);\r\n                }\r\n            }\r\n            //事件\r\n            if (this.events && this.events.size > 0) {\r\n                for (let p of this.events) {\r\n                    //复制数组\r\n                    dst.setEvent(p[0], p[1].slice(0));\r\n                }\r\n            }\r\n            if (this.directives && this.directives.length > 0) {\r\n                dst.directives = [];\r\n                for (let d of this.directives) {\r\n                    dst.directives.push(d.clone());\r\n                }\r\n            }\r\n            //子节点clone\r\n            if (this.children) {\r\n                for (let c of this.children) {\r\n                    dst.add(c.clone());\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            dst.expressions = this.expressions;\r\n            dst.textContent = this.textContent;\r\n        }\r\n        dst.staticNum = this.staticNum;\r\n        return dst;\r\n    }\r\n}\r\n//# sourceMappingURL=virtualdom.js.map","references":["D:/User_zhao/gitRepository/competition/nodom/core/directive.ts","D:/User_zhao/gitRepository/competition/nodom/core/directivemanager.ts","D:/User_zhao/gitRepository/competition/nodom/core/event.ts","D:/User_zhao/gitRepository/competition/nodom/core/expression.ts","D:/User_zhao/gitRepository/competition/nodom/core/model.ts","D:/User_zhao/gitRepository/competition/nodom/core/module.ts","D:/User_zhao/gitRepository/competition/nodom/core/util.ts"],"map":"{\"version\":3,\"file\":\"virtualdom.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../core/virtualdom.ts\"],\"names\":[],\"mappings\":\"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\"}"}
