{"code":"/**\r\n * 过滤器工厂，存储模块过滤器\r\n */\r\nexport class ModuleFactory {\r\n    /**\r\n     * 添加模块到工厂\r\n     * @param item  模块对象\r\n     */\r\n    static add(item) {\r\n        // //第一个为主模块\r\n        if (this.modules.size === 0) {\r\n            this.mainModule = item;\r\n        }\r\n        this.modules.set(item.id, item);\r\n        //添加模块类\r\n        this.addClass(item.constructor);\r\n    }\r\n    /**\r\n     * 获得模块\r\n     * @param name  类、类名或实例id\r\n     */\r\n    static get(name) {\r\n        if (typeof name === 'number') {\r\n            return this.modules.get(name);\r\n        }\r\n        else {\r\n            return this.getInstance(name);\r\n        }\r\n    }\r\n    /**\r\n     * 是否存在模块类\r\n     * @param clazzName     模块类名\r\n     * @returns     true/false\r\n     */\r\n    static hasClass(clazzName) {\r\n        return this.classes.has(clazzName);\r\n    }\r\n    /**\r\n     * 添加模块类\r\n     * @param clazz     模块类\r\n     * @param name      注册别名\r\n     */\r\n    static addClass(clazz, name) {\r\n        if (this.classes.has(clazz.name)) {\r\n            return;\r\n        }\r\n        this.classes.set(clazz.name, clazz);\r\n        if (name) {\r\n            this.classes.set(name, clazz);\r\n        }\r\n    }\r\n    /**\r\n     * 获取模块实例（通过类名）\r\n     * @param className     模块类或类名\r\n     * @param props         模块外部属性\r\n     */\r\n    static getInstance(clazz) {\r\n        let className = (typeof clazz === 'string') ? clazz : clazz.name;\r\n        let cls;\r\n        // 初始化模块\r\n        if (!this.classes.has(className) && typeof clazz === 'function') {\r\n            cls = clazz;\r\n        }\r\n        else {\r\n            cls = this.classes.get(className);\r\n        }\r\n        if (!cls) {\r\n            return;\r\n        }\r\n        let m = Reflect.construct(cls, []);\r\n        m.init();\r\n        return m;\r\n    }\r\n    /**\r\n     * 从工厂移除模块\r\n     * @param id    模块id\r\n     */\r\n    static remove(id) {\r\n        this.modules.delete(id);\r\n    }\r\n    /**\r\n     * 设置主模块\r\n     * @param m \t模块\r\n     */\r\n    static setMain(m) {\r\n        this.mainModule = m;\r\n    }\r\n    /**\r\n     * 获取主模块\r\n     * @returns \t应用的主模块\r\n     */\r\n    static getMain() {\r\n        return this.mainModule;\r\n    }\r\n}\r\n/**\r\n * 模块对象工厂 {moduleId:{key:容器key,className:模块类名,instance:模块实例}}\r\n */\r\nModuleFactory.modules = new Map();\r\n/**\r\n * 模块类集合 {className:class}\r\n */\r\nModuleFactory.classes = new Map();\r\n//# sourceMappingURL=modulefactory.js.map","references":["D:/User_zhao/gitRepository/competition/nodom/core/module.ts"],"map":"{\"version\":3,\"file\":\"modulefactory.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../core/modulefactory.ts\"],\"names\":[],\"mappings\":\"AAEA;;GAEG;AACH,MAAM,OAAO,aAAa;IAetB;;;OAGG;IACI,MAAM,CAAC,GAAG,CAAC,IAAW;QACzB,YAAY;QACZ,IAAG,IAAI,CAAC,OAAO,CAAC,IAAI,KAAK,CAAC,EAAC;YACvB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SAC1B;QACD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAEhC,OAAO;QACP,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACpC,CAAC;IAED;;;OAGG;IACI,MAAM,CAAC,GAAG,CAAC,IAAQ;QACtB,IAAG,OAAO,IAAI,KAAK,QAAQ,EAAC;YACxB,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;SACjC;aAAI;YACD,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;SACjC;IACL,CAAC;IAED;;;;OAIG;IACI,MAAM,CAAC,QAAQ,CAAC,SAAgB;QACnC,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IACvC,CAAC;IAED;;;;OAIG;IACI,MAAM,CAAC,QAAQ,CAAC,KAAS,EAAC,IAAY;QACzC,IAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,EAAC;YAC5B,OAAO;SACV;QACD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAC,KAAK,CAAC,CAAC;QACnC,IAAG,IAAI,EAAC;YACJ,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAC,KAAK,CAAC,CAAC;SAChC;IACL,CAAC;IAED;;;;OAIG;IACK,MAAM,CAAC,WAAW,CAAC,KAAS;QAChC,IAAI,SAAS,GAAG,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAA,CAAC,CAAA,KAAK,CAAA,CAAC,CAAA,KAAK,CAAC,IAAI,CAAC;QAC7D,IAAI,GAAG,CAAC;QACR,QAAQ;QACR,IAAG,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,OAAO,KAAK,KAAK,UAAU,EAAC;YAC3D,GAAG,GAAG,KAAK,CAAC;SACf;aAAI;YACD,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;SACrC;QAED,IAAG,CAAC,GAAG,EAAC;YACJ,OAAO;SACV;QAED,IAAI,CAAC,GAAU,OAAO,CAAC,SAAS,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QAC1C,CAAC,CAAC,IAAI,EAAE,CAAC;QACT,OAAO,CAAC,CAAC;IACb,CAAC;IACD;;;OAGG;IACH,MAAM,CAAC,MAAM,CAAC,EAAU;QACpB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IAC5B,CAAC;IACD;;;OAGG;IACH,MAAM,CAAC,OAAO,CAAC,CAAS;QACpB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;IACxB,CAAC;IAED;;;OAGG;IACH,MAAM,CAAC,OAAO;QACV,OAAO,IAAI,CAAC,UAAU,CAAC;IAC3B,CAAC;;AA7GD;;GAEG;AACY,qBAAO,GAAwB,IAAI,GAAG,EAAE,CAAC;AAExD;;GAEG;AACW,qBAAO,GAAqB,IAAI,GAAG,EAAE,CAAC\"}"}
