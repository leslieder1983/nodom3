{"code":"import { DirectiveType } from \"./directivetype\";\r\n/**\r\n * 指令管理器\r\n */\r\nexport class DirectiveManager {\r\n    /**\r\n     * 创建指令类型\r\n     * @param name \t\t    指令类型名\r\n     * @param config \t    配置对象{order:优先级,init:初始化函数,handler:渲染处理函数}\r\n     */\r\n    static addType(name, handle, prio) {\r\n        this.directiveTypes.set(name, new DirectiveType(name, handle, prio));\r\n    }\r\n    /**\r\n     * 移除过滤器类型\r\n     * @param name  过滤器类型名\r\n     */\r\n    static removeType(name) {\r\n        this.directiveTypes.delete(name);\r\n    }\r\n    /**\r\n     * 获取类型\r\n     * @param name  指令类型名\r\n     * @returns     指令或undefined\r\n     */\r\n    static getType(name) {\r\n        return this.directiveTypes.get(name);\r\n    }\r\n    /**\r\n     * 是否有某个过滤器类型\r\n     * @param type \t\t过滤器类型名\r\n     * @returns \t\ttrue/false\r\n     */\r\n    static hasType(name) {\r\n        return this.directiveTypes.has(name);\r\n    }\r\n}\r\n/**\r\n * 指令类型集合\r\n */\r\nDirectiveManager.directiveTypes = new Map();\r\n//# sourceMappingURL=directivemanager.js.map","references":["D:/User_zhao/gitRepository/competition/nodom/core/directivetype.ts"],"map":"{\"version\":3,\"file\":\"directivemanager.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../core/directivemanager.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAChD;;GAEG;AACH,MAAM,OAAQ,gBAAgB;IAM1B;;;;OAIG;IACI,MAAM,CAAC,OAAO,CAAC,IAAW,EAAC,MAAe,EAAC,IAAY;QAC1D,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,aAAa,CAAC,IAAI,EAAC,MAAM,EAAC,IAAI,CAAC,CAAC,CAAC;IACvE,CAAC;IAED;;;OAGG;IACI,MAAM,CAAC,UAAU,CAAC,IAAW;QAChC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACrC,CAAC;IAED;;;;OAIG;IACI,MAAM,CAAC,OAAO,CAAC,IAAW;QAC7B,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACzC,CAAC;IAED;;;;OAIG;IACI,MAAM,CAAC,OAAO,CAAC,IAAW;QAC7B,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACzC,CAAC;;AAtCD;;GAEG;AACY,+BAAc,GAA6B,IAAI,GAAG,EAAE,CAAC\"}"}
