{"code":"import { __awaiter } from \"tslib\";\r\nimport { DirectiveManager } from \"./directivemanager\";\r\nimport { NError } from \"./error\";\r\nimport { NodomMessage_en } from \"./locales/msg_en\";\r\nimport { ModuleFactory } from \"./modulefactory\";\r\nimport { Renderer } from \"./renderer\";\r\nimport { Route } from \"./route\";\r\nimport { Scheduler } from \"./scheduler\";\r\nimport { Util } from \"./util\";\r\n/**\r\n * 新建store方法\r\n */\r\n/**\r\n * nodom提示消息\r\n */\r\nexport var NodomMessage;\r\n/**\r\n * 新建一个App\r\n * @param clazz     模块类\r\n * @param el        el选择器\r\n */\r\nexport function nodom(clazz, el) {\r\n    //渲染器启动渲染\r\n    Scheduler.addTask(Renderer.render, Renderer);\r\n    //启动调度器\r\n    Scheduler.start();\r\n    NodomMessage = NodomMessage_en;\r\n    let mdl = ModuleFactory.get(clazz);\r\n    mdl.setContainer(document.querySelector(el));\r\n    mdl.active();\r\n}\r\n/**\r\n * 暴露的创建路由方法\r\n * @param config  数组或单个配置\r\n */\r\nexport function createRoute(config) {\r\n    if (Util.isArray(config)) {\r\n        for (let item of config) {\r\n            new Route(item);\r\n        }\r\n    }\r\n    else {\r\n        return new Route(config);\r\n    }\r\n}\r\n/**\r\n * 创建指令\r\n * @param name      指令名\r\n * @param priority  优先级（1最小，1-10为框架保留优先级）\r\n * @param init      初始化方法\r\n * @param handler   渲染时方法\r\n */\r\nexport function createDirective(name, handler, priority) {\r\n    return DirectiveManager.addType(name, handler, priority);\r\n}\r\n/**\r\n * 注册模块\r\n * @param clazz     模块类\r\n * @param name      注册名，如果没有，则为类名\r\n */\r\nexport function registModule(clazz, name) {\r\n    ModuleFactory.addClass(clazz, name);\r\n}\r\n/**\r\n * ajax 请求\r\n * @param config    object 或 string\r\n *                  如果为string，则直接以get方式获取资源\r\n *                  object 项如下:\r\n *                  参数名|类型|默认值|必填|可选值|描述\r\n *                  -|-|-|-|-|-\r\n *                  url|string|无|是|无|请求url\r\n *\t\t\t\t\tmethod|string|GET|否|GET,POST,HEAD|请求类型\r\n *\t\t\t\t\tparams|Object/FormData|{}|否|无|参数，json格式\r\n *\t\t\t\t\tasync|bool|true|否|true,false|是否异步\r\n *  \t\t\t\ttimeout|number|0|否|无|请求超时时间\r\n *                  type|string|text|否|json,text|\r\n *\t\t\t\t\twithCredentials|bool|false|否|true,false|同源策略，跨域时cookie保存\r\n *                  header|Object|无|否|无|request header 对象\r\n *                  user|string|无|否|无|需要认证的请求对应的用户名\r\n *                  pwd|string|无|否|无|需要认证的请求对应的密码\r\n *                  rand|bool|无|否|无|请求随机数，设置则浏览器缓存失效\r\n */\r\nexport function request(config) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        return new Promise((resolve, reject) => {\r\n            if (typeof config === 'string') {\r\n                config = {\r\n                    url: config\r\n                };\r\n            }\r\n            config.params = config.params || {};\r\n            //随机数\r\n            if (config.rand) { //针对数据部分，仅在app中使用\r\n                config.params.$rand = Math.random();\r\n            }\r\n            let url = config.url;\r\n            const async = config.async === false ? false : true;\r\n            const req = new XMLHttpRequest();\r\n            //设置同源策略\r\n            req.withCredentials = config.withCredentials;\r\n            //类型默认为get\r\n            const method = (config.method || 'GET').toUpperCase();\r\n            //超时，同步时不能设置\r\n            req.timeout = async ? config.timeout : 0;\r\n            req.onload = () => {\r\n                if (req.status === 200) {\r\n                    let r = req.responseText;\r\n                    if (config.type === 'json') {\r\n                        try {\r\n                            r = JSON.parse(r);\r\n                        }\r\n                        catch (e) {\r\n                            reject({ type: \"jsonparse\" });\r\n                        }\r\n                    }\r\n                    resolve(r);\r\n                }\r\n                else {\r\n                    reject({ type: 'error', url: url });\r\n                }\r\n            };\r\n            req.ontimeout = () => reject({ type: 'timeout' });\r\n            req.onerror = () => reject({ type: 'error', url: url });\r\n            //上传数据\r\n            let data = null;\r\n            switch (method) {\r\n                case 'GET':\r\n                    //参数\r\n                    let pa;\r\n                    if (Util.isObject(config.params)) {\r\n                        let ar = [];\r\n                        Util.getOwnProps(config.params).forEach(function (key) {\r\n                            ar.push(key + '=' + config.params[key]);\r\n                        });\r\n                        pa = ar.join('&');\r\n                    }\r\n                    if (pa !== undefined) {\r\n                        if (url.indexOf('?') !== -1) {\r\n                            url += '&' + pa;\r\n                        }\r\n                        else {\r\n                            url += '?' + pa;\r\n                        }\r\n                    }\r\n                    break;\r\n                case 'POST':\r\n                    if (config.params instanceof FormData) {\r\n                        data = config.params;\r\n                    }\r\n                    else {\r\n                        let fd = new FormData();\r\n                        for (let o in config.params) {\r\n                            fd.append(o, config.params[o]);\r\n                        }\r\n                        data = fd;\r\n                    }\r\n                    break;\r\n            }\r\n            req.open(method, url, async, config.user, config.pwd);\r\n            //设置request header\r\n            if (config.header) {\r\n                Util.getOwnProps(config.header).forEach((item) => {\r\n                    req.setRequestHeader(item, config.header[item]);\r\n                });\r\n            }\r\n            req.send(data);\r\n        }).catch((re) => {\r\n            switch (re.type) {\r\n                case \"error\":\r\n                    throw new NError(\"notexist1\", NodomMessage.TipWords['resource'], re.url);\r\n                case \"timeout\":\r\n                    throw new NError(\"timeout\");\r\n                case \"jsonparse\":\r\n                    throw new NError(\"jsonparse\");\r\n            }\r\n        });\r\n    });\r\n}\r\n//# sourceMappingURL=nodom.js.map","references":["D:/User_zhao/gitRepository/competition/nodom/core/directivemanager.ts","D:/User_zhao/gitRepository/competition/nodom/core/error.ts","D:/User_zhao/gitRepository/competition/nodom/core/locales/msg_en.ts","D:/User_zhao/gitRepository/competition/nodom/core/modulefactory.ts","D:/User_zhao/gitRepository/competition/nodom/core/renderer.ts","D:/User_zhao/gitRepository/competition/nodom/core/route.ts","D:/User_zhao/gitRepository/competition/nodom/core/scheduler.ts","D:/User_zhao/gitRepository/competition/nodom/core/types.ts","D:/User_zhao/gitRepository/competition/nodom/core/util.ts"],"map":"{\"version\":3,\"file\":\"nodom.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../core/nodom.ts\"],\"names\":[],\"mappings\":\"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\"}"}
