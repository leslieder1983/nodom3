{"code":"import { ModuleFactory } from \"./modulefactory\";\r\nimport { Renderer } from \"./renderer\";\r\n/**\r\n * 模型工厂\r\n */\r\nexport class ModelManager {\r\n    /**\r\n     * 添加到 dataNModelMap\r\n     * @param data      数据对象\r\n     * @param model     模型\r\n     */\r\n    static addToDataMap(data, model) {\r\n        this.dataMap.set(data, model);\r\n    }\r\n    /**\r\n     * 删除从 dataNModelMap\r\n     * @param data      数据对象\r\n     * @param model     模型\r\n     */\r\n    static delFromDataMap(data) {\r\n        this.dataMap.delete(data);\r\n    }\r\n    /**\r\n     * 从dataNModelMap获取model\r\n     * @param data      数据对象\r\n     * @returns         model\r\n     */\r\n    static getFromDataMap(data) {\r\n        return this.dataMap.get(data);\r\n    }\r\n    /**\r\n     * 是否存在数据模型映射\r\n     * @param data  数据对象\r\n     * @returns     true/false\r\n     */\r\n    static hasDataModel(data) {\r\n        return this.dataMap.has(data);\r\n    }\r\n    /**\r\n     * 添加源模型到到模型map\r\n     * @param model     模型代理\r\n     * @param srcNModel  源模型\r\n     */\r\n    static addModel(model, srcNModel) {\r\n        if (!this.modelMap.has(model)) {\r\n            this.modelMap.set(model, { model: srcNModel });\r\n        }\r\n        else {\r\n            this.modelMap.get(model).model = srcNModel;\r\n        }\r\n    }\r\n    /**\r\n   * 删除源模型到到模型map\r\n   * @param model     模型代理\r\n   * @param srcNModel  源模型\r\n   */\r\n    static delModel(model) {\r\n        this.modelMap.delete(model);\r\n    }\r\n    /**\r\n     * 从模型Map获取源数据\r\n     * @param model     模型代理\r\n     * @returns         源模型\r\n     */\r\n    static getData(model) {\r\n        if (this.modelMap.has(model)) {\r\n            return this.modelMap.get(model).data;\r\n        }\r\n        return undefined;\r\n    }\r\n    /**\r\n     * 获取model监听器\r\n     * @param model     model\r\n     * @param key       model对应的属性\r\n     * @param foo       监听处理方法\r\n     * @returns         void\r\n     */\r\n    static addWatcher(model, key, foo) {\r\n        // 把model加入到model map\r\n        if (!this.modelMap.has(model)) {\r\n            this.modelMap.set(model, {});\r\n        }\r\n        let watchers = this.modelMap.get(model).watchers;\r\n        //添加watchers属性\r\n        if (!watchers) {\r\n            watchers = {};\r\n            this.modelMap.get(model).watchers = watchers;\r\n        }\r\n        //添加观察器数组\r\n        if (!watchers[key]) {\r\n            watchers[key] = [foo];\r\n        }\r\n        else {\r\n            //把处理函数加入观察器数组\r\n            watchers[key].push(foo);\r\n        }\r\n    }\r\n    /**\r\n     * 获取model监听器\r\n     * @param model     model\r\n     * @param key       model对应的属性\r\n     * @param foo       监听处理方法\r\n     * @returns         void\r\n     */\r\n    static removeWatcher(model, key, foo) {\r\n        if (!this.modelMap.has(model) || !this.modelMap.get(model).watchers) {\r\n            return;\r\n        }\r\n        let watchers = this.modelMap.get(model).watchers;\r\n        if (!watchers[key]) {\r\n            return;\r\n        }\r\n        let index = watchers[key].findIndex(foo);\r\n        //找到后移除\r\n        if (index !== -1) {\r\n            watchers.splice(index, 1);\r\n        }\r\n    }\r\n    /**\r\n     * 获取model监听器\r\n     * @param model     model\r\n     * @param key       model对应的属性\r\n     * @returns         监听处理函数数组\r\n     */\r\n    static getWatcher(model, key) {\r\n        if (!this.modelMap.has(model)) {\r\n            return;\r\n        }\r\n        let watchers = this.modelMap.get(model).watchers;\r\n        if (watchers) {\r\n            return watchers[key];\r\n        }\r\n    }\r\n    /**\r\n     * 绑定model到module\r\n     * @param model     模型\r\n     * @param module    模块\r\n     * @returns\r\n     */\r\n    static bindToModule(model, module) {\r\n        let obj = this.modelMap.get(model);\r\n        if (!obj) {\r\n            return;\r\n        }\r\n        let mid = typeof module === 'number' ? module : module.id;\r\n        if (!obj.modules) {\r\n            obj.modules = [mid];\r\n        }\r\n        else {\r\n            let arr = obj.modules;\r\n            if (arr.indexOf(mid) === -1) {\r\n                arr.push(mid);\r\n            }\r\n        }\r\n        //级联设置\r\n        Object.getOwnPropertyNames(model).forEach(item => {\r\n            if (typeof model[item] === 'object' && model[item].$key) {\r\n                ModelManager.bindToModule(model[item], module);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * 绑定model到多个module\r\n     * @param model     模型\r\n     * @param ids       模块id数组\r\n     * @returns\r\n     */\r\n    static bindToModules(model, ids) {\r\n        let obj = this.modelMap.get(model);\r\n        if (!obj) {\r\n            return;\r\n        }\r\n        if (!obj.modules) {\r\n            obj.modules = ids;\r\n        }\r\n        else {\r\n            let arr = obj.modules;\r\n            for (let mid of ids) {\r\n                if (arr.indexOf(mid) === -1) {\r\n                    arr.push(mid);\r\n                }\r\n            }\r\n        }\r\n        //级联设置\r\n        Object.getOwnPropertyNames(model).forEach(item => {\r\n            if (typeof model[item] === 'object' && model[item].$key) {\r\n                ModelManager.bindToModules(model[item], ids);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * model从module解绑\r\n     * @param model     模型\r\n     * @param module    模块\r\n     * @returns\r\n     */\r\n    static unbindFromModule(model, module) {\r\n        let obj = this.modelMap.get(model);\r\n        if (!obj || !obj.modules) {\r\n            return;\r\n        }\r\n        let mid = typeof module === 'number' ? module : module.id;\r\n        let arr = obj.modules;\r\n        let ind;\r\n        if ((ind = arr.indexOf(mid)) === -1) {\r\n            arr.splice(ind);\r\n        }\r\n        //级联解绑\r\n        Object.getOwnPropertyNames(model).forEach(item => {\r\n            if (typeof model[item] === 'object' && model[item].$key) {\r\n                ModelManager.unbindFromModule(model[item], module);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * 获取model绑定的moduleId\r\n     * @param model     模型\r\n     * @returns model绑定的模块id数组\r\n     */\r\n    static getModuleIds(model) {\r\n        let obj = this.modelMap.get(model);\r\n        if (!obj) {\r\n            return;\r\n        }\r\n        return obj.modules;\r\n    }\r\n    /**\r\n     * 更新导致渲染\r\n     * 如果不设置oldValue和newValue，则直接强制渲染\r\n     * @param model     model\r\n     * @param key       属性\r\n     * @param oldValue  旧值\r\n     * @param newValue  新值\r\n     * @param force     强制渲染\r\n     */\r\n    static update(model, key, oldValue, newValue, force) {\r\n        //处理观察器函数\r\n        let obj = this.modelMap.get(model);\r\n        if (!obj) {\r\n            return;\r\n        }\r\n        let mids = obj.modules;\r\n        let modules = [];\r\n        for (let mid of mids) {\r\n            let m = ModuleFactory.get(mid);\r\n            modules.push(m);\r\n            //增加修改标志\r\n            m.changedModelMap.set(model.$key, true);\r\n        }\r\n        let watcher = this.getWatcher(model, key);\r\n        if (watcher) {\r\n            for (let foo of watcher) {\r\n                for (let m of modules) {\r\n                    //方法名\r\n                    if (typeof foo === 'string') {\r\n                        foo = m.getMethod(foo);\r\n                        if (foo) {\r\n                            foo.call(m, model, oldValue, newValue);\r\n                        }\r\n                    }\r\n                    else {\r\n                        foo.call(m, model, oldValue, newValue);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (oldValue !== newValue || force) {\r\n            for (let m of modules) {\r\n                Renderer.add(m);\r\n            }\r\n        }\r\n    }\r\n}\r\n// public module: Module;\r\n/**\r\n * 数据对象与模型映射，key为数据对象，value为model\r\n */\r\nModelManager.dataMap = new WeakMap();\r\n/**\r\n * 模型模块映射\r\n * key:model proxy, value:{data:data,watchers:{key:[监听器1,监听器2,...]},modules:[id1,id2,...]}\r\n * 每个数据对象，可有多个监听器\r\n */\r\nModelManager.modelMap = new WeakMap();\r\n//# sourceMappingURL=modelmanager.js.map","references":["D:/User_zhao/gitRepository/competition/nodom/core/virtualdom.ts","D:/User_zhao/gitRepository/competition/nodom/core/model.ts","D:/User_zhao/gitRepository/competition/nodom/core/module.ts","D:/User_zhao/gitRepository/competition/nodom/core/modulefactory.ts","D:/User_zhao/gitRepository/competition/nodom/core/renderer.ts"],"map":"{\"version\":3,\"file\":\"modelmanager.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../core/modelmanager.ts\"],\"names\":[],\"mappings\":\"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\"}"}
